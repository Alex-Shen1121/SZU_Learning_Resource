-- QUESTION2.1
SELECT
	ENAME,
	SAL 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
	AND T2.LOC = 'LUTON';
	
-- QUESTION2.2
SELECT
	T1.*,T2.DNAME,T2.DEPTNO 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
ORDER BY
	T1.DEPTNO;

-- QUESTION2.3
SELECT
	ENAME 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
	AND T1.JOB = 'SALESMAN' 
	AND T2.DNAME = 'SALES';

-- QUESTION2.4
SELECT
	DNAME 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
GROUP BY
	T1.DEPTNO
HAVING
	COUNT( T1.DEPTNO )=0;
	
-- QUESTION2.5
SELECT
	T1.ENAME,
	T1.SAL,
	T2.ENAME,
	T2.SAL 
FROM
	EMP AS T1,
	EMP AS T2 
WHERE
	T1.MGR = T2.EMPNO 
	AND T1.SAL > T2.SAL;

-- QUESTION2.6
SELECT
	T1.ENAME 
FROM
	EMP AS T1,
	EMP AS T2 
WHERE
	T1.MGR = T2.EMPNO 
	AND T2.ENAME = 'BLAKE';

-- QUESTION2.7
SELECT
	T1.ENAME AS EMPLOYEE_NAME,
	T2.ENAME AS MANAGER_NAME 
FROM
	EMP AS T1,
	EMP AS T2 
WHERE
	T1.MGR = T2.EMPNO UNION
SELECT
	ENAME,
	MGR 
FROM
	EMP 
WHERE
	MGR IS NULL;

-- QUESTION3.1
SELECT
	COUNT(*) 
FROM
	EMP 
WHERE
	JOB = 'MANAGER';

-- QUESTION3.2
SELECT
	AVG( SAL + COMM )* 12 AS ANNUAL_AVG 
FROM
	EMP 
WHERE
	JOB = 'SALESMAN';
	
-- QUESTION3.3
SELECT
	MAX( SAL ) AS HIGHEST_SAL,
	MIN( SAL ) AS LOWEST_SAL,
	MAX( SAL )- MIN( SAL ) AS DIFERENCE 
FROM
	EMP;

-- QUESTION3.4
SELECT
	DNAME,
	COUNT(*) 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
GROUP BY
	DNAME 
HAVING
	LENGTH( DNAME )>= ALL (
	SELECT
		LENGTH( DNAME ) 
	FROM
	DEPT);
	
-- QUESTION3.5
SELECT
	COUNT( SAL ),
	COUNT( COMM ) 
FROM
	EMP 
WHERE
	DEPTNO = 30;

-- QUESTION3.6
SELECT
	AVG( COMM ) AS AVG1,
	SUM( COMM )/ COUNT(*) AS AVG2
FROM
	EMP;

-- QUESTION3.7
SELECT
	AVG( SAL ) AS AVG1,
	AVG( COMM ) AS AVG2,
	AVG( SAL + COMM ) AS AVG3,
	SUM( SAL + COMM )/ COUNT(*) AS AVG4 
FROM
	EMP;

-- QUESTION3.8
SELECT
	ROUND( AVG( SAL )/ 22 ) AS DAILY_SAL,
	ROUND( AVG( SAL )/ ( 22 * 8 )) AS HOURLY_SAL 
FROM
	EMP 
WHERE
	DEPTNO = 30;

-- QUESTION3.9
SELECT
	FLOOR( AVG( SAL )/ 22 ) AS DAILY_SAL,
	FLOOR( AVG( SAL )/ ( 22 * 8 )) AS HOURLY_SAL 
FROM
	EMP;
	
-- QUESTION4.1
SELECT
	ENAME,
	JOB,
	DATE_FORMAT( HIREDATE, '%D/%M/%Y' ) 
FROM
	EMP;

-- QUESTION4.2
SELECT
	ENAME,
	JOB,
	DATE_FORMAT( HIREDATE, '%W %M %d %Y' ) 
FROM
	EMP;

-- QUESTION4.3
SELECT
	* 
FROM
	EMP 
WHERE
	MONTH ( HIREDATE )=3;

-- QUESTION4.4
SELECT
	* 
FROM
	EMP 
WHERE
	DAYOFWEEK( HIREDATE )=3;
	
-- QUESTION4.5
SELECT
	* 
FROM
	EMP 
WHERE
	TIMESTAMPDIFF(
		YEAR,
		HIREDATE,
	NOW())>= 16;

-- QUESTION4.6
SELECT
	ENAME,
	DATE_FORMAT( HIREDATE, '%W' ) 
FROM
	EMP;

-- QUESTION4.7
-- QUESTION4.8

-- QUESTION5.1
SELECT
	DEPTNO,
	AVG( SAL ) 
FROM
	EMP 
GROUP BY
	DEPTNO;
	
-- QUESTION5.2
SELECT
	JOB,
	DEPTNO,
	AVG( SAL ) * 12 AS ANNUAL_SAL
FROM
	EMP 
GROUP BY
	DEPTNO,
	JOB 
ORDER BY
	DEPTNO ASC;

-- QUESTION5.3
SELECT
	JOB,
	DNAME,
	AVG( SAL ) * 12 AS ANNUAL_SAL 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
GROUP BY
	T1.DEPTNO,
	JOB
ORDER BY
	DNAME ASC;

-- QUESTION5.4
SELECT
	JOB,
	AVG( SAL )* 12 
FROM
	EMP 
GROUP BY
	JOB 
HAVING
	COUNT(*)>2;

-- QUESTION5.5
SELECT
	DEPTNO 
FROM
	EMP 
GROUP BY
	DEPTNO 
HAVING
	AVG( COMM )> 0.25 * AVG( SAL );
	
-- QUESTION5.6
SELECT
	DEPTNO,
	AVG( SAL )* 12 
FROM
	EMP 
WHERE
	JOB != 'PRESIDENT' 
	OR JOB != 'MANAGER' 
GROUP BY
	DEPTNO 
ORDER BY
	DEPTNO ASC;

-- QUESTION5.7.1
SELECT
	T1.DEPTNO,
	DNAME 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
GROUP BY
	T1.DEPTNO 
HAVING
	COUNT( CASE WHEN JOB = 'CLERK' THEN 1 ELSE NULL END )>= 2 
	AND COUNT( CASE WHEN JOB = 'MANAGER' THEN 1 ELSE NULL END )>=1;

-- QUESTION5.7.2
SELECT
	T1.DEPTNO,
	DNAME 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
GROUP BY
	T1.DEPTNO 
HAVING
	COUNT( CASE WHEN JOB = 'CLERK' THEN 1 ELSE NULL END )>= 2 
	AND COUNT( CASE WHEN JOB = 'MANAGER' THEN 1 ELSE NULL END )>= 1 
	AND AVG( SAL )>= ( SELECT AVG( SAL ) FROM EMP );

-- QUESTION5.8
SELECT
	T2.ENAME,COUNT(*) AS EMP_NUM
FROM
	EMP AS T1,
	EMP AS T2 
WHERE
	T1.MGR = T2.EMPNO 
	AND (T2.JOB = 'MANAGER' OR T2.JOB = 'PRESIDENT')
GROUP BY
	T2.ENAME 
ORDER BY
	COUNT(*) DESC 
	LIMIT 1;

-- QUESTION5.9
SELECT
	T2.ENAME,COUNT(*)
FROM
	EMP AS T1,
	EMP AS T2 
WHERE
	T1.MGR = T2.EMPNO 
	AND (T2.JOB = 'MANAGER' OR T2.JOB = 'PRESIDENT') 
GROUP BY
	T2.ENAME 
	HAVING
	COUNT(*)>=2
ORDER BY
	COUNT(*) DESC;

-- QUESTION6.1
SELECT
	ENAME,
	JOB 
FROM
	EMP 
WHERE
	JOB IN ( SELECT JOB FROM EMP WHERE ENAME = 'JONES' );

-- QUESTION6.2
SELECT
	ENAME 
FROM
	EMP 
WHERE
	DEPTNO = 10 
	AND JOB = SOME ( SELECT JOB FROM EMP WHERE DEPTNO = 30 );

-- QUESTION6.3
SELECT
	ENAME,
	JOB,
	DEPTNO 
FROM
	EMP 
WHERE
	JOB =(SELECT JOB FROM EMP	WHERE ENAME = 'JONES' ) 
	OR SAL >=(SELECT SAL FROM EMP WHERE	ENAME = 'FORD');

-- QUESTION6.4
SELECT
	ENAME 
FROM
	EMP 
WHERE
	DEPTNO = 10 
	AND JOB = SOME ( 
		SELECT 
			JOB 
		FROM 
			EMP AS T1, DEPT AS T2 
		WHERE 
			T1.DEPTNO = T2.DEPTNO AND T2.DNAME = 'SALES'
		);

-- QUESTION6.5
SELECT
	ENAME 
FROM
	EMP AS T1,
	DEPT AS T2 
WHERE
	T1.DEPTNO = T2.DEPTNO 
	AND T2.LOC = 'LIVERPOOL' 
	AND T1.JOB =(
	SELECT
		JOB 
	FROM
		EMP 
	WHERE
		ENAME = 'ALLEN' 
	) 
ORDER BY
	ENAME ASC;

-- QUESTION6.6
SELECT 
	ENAME 
FROM 
	EMP AS T1,
	( SELECT DEPTNO, AVG( SAL ) AS AVG FROM EMP GROUP BY DEPTNO ) AS T2 
WHERE
	T1.SAL > T2.AVG
	AND T1.DEPTNO = T2.DEPTNO;
	
-- QUESTION6.7
SELECT
	T1.ENAME 
FROM
	EMP AS T1,
	EMP AS T2 
WHERE
	T2.ENAME = 'JONES' 
	AND T1.SAL > T2.SAL;
	
-- QUESTION6.8
SELECT
	ENAME 
FROM
	EMP 
ORDER BY
	SAL DESC
	LIMIT 2;
	
-- QUESTION7.1
CREATE TABLE `loan` (
	`LNO` DECIMAL ( 3, 0 ) NOT NULL,
	`EMPNO` INT ( 4 ) DEFAULT NULL,
	`TYPE` CHAR ( 1 ) DEFAULT NULL,
	`AMNT` DECIMAL ( 8, 2 ) DEFAULT NULL,
	PRIMARY KEY ( `LNO` ),
	FOREIGN KEY ( `EMPNO` ) REFERENCES EMP ( EMPNO ) 
)

-- QUESTION7.2
INSERT INTO LOAN
VALUES
	( 23, 7499, 'M', 20000 );
	
INSERT INTO LOAN
VALUES
	( 42, 7499, 'C', 2000 );
	
INSERT INTO LOAN
VALUES
	( 65, 7844, 'M', 3564 );

-- QUESTION7.3
SELECT
	* 
FROM
	LOAN;
	
-- QUESTION7.4
ALTER TABLE LOAN ADD COLUMN OUST NUMERIC ( 8, 2 );

-- QUESTION7.5
UPDATE LOAN 
SET AMNT = AMNT * 1.1 
WHERE
	TYPE = 'M';

-- QUESTION7.6
DELETE 
FROM
	LOAN 
WHERE
	AMNT < 3000;
	
-- QUESTION7.7
ALTER TABLE LOAN RENAME TO ACCOUNTS;

-- QUESTION7.8
ALTER TABLE ACCOUNTS CHANGE LNO LOANNO NUMERIC ( 3, 0 );

-- QUESTION7.9
CREATE VIEW VIEW1 AS SELECT
ENAME,
EMPNO,
JOB,
HIREDATE 
FROM
	EMP 
WHERE
	DEPTNO = 30;

-- QUESTION7.10
SELECT
	* 
FROM
	view1 
WHERE
	JOB IS NOT NULL 
	AND JOB != 'SALESMAN'

-- QUESTION7.11
CREATE VIEW VIEW2 AS SELECT
* 
FROM
	DEPT