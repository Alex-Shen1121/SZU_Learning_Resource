1
00:00:00,390 --> 00:00:03,570
In the previous video, we talked about evaluation metrics.
在之前的视频中 我们讨论了评价指标
(字幕修改合并：中国海洋大学 黄海广
haiguang2000@qq.com )

2
00:00:04,730 --> 00:00:05,840
In this video, I'd like
在这个视频中

3
00:00:06,080 --> 00:00:07,230
to switch tracks a bit and
我要稍微转换一下

4
00:00:07,480 --> 00:00:08,900
touch on another important aspect of
讨论一下机器学习系统设计中

5
00:00:09,570 --> 00:00:10,990
machine learning system design,
另一个重要的方面

6
00:00:11,800 --> 00:00:13,290
which will often come up, which
这往往涉及到

7
00:00:13,470 --> 00:00:14,990
is the issue of how much
用来训练的数据

8
00:00:15,270 --> 00:00:17,110
data to train on.
有多少

9
00:00:17,310 --> 00:00:18,440
Now, in some earlier videos, I
在之前的一些视频中

10
00:00:18,620 --> 00:00:20,320
had cautioned against blindly
我曾告诫大家不要盲目地开始

11
00:00:20,690 --> 00:00:21,660
going out and just spending
而是花大量的时间

12
00:00:21,980 --> 00:00:23,300
lots of time collecting lots of
来收集大量的数据

13
00:00:23,420 --> 00:00:24,730
data, because it's only
因为数据

14
00:00:25,040 --> 00:00:26,360
sometimes that that would actually help.
有时是唯一能实际起到作用的

15
00:00:27,510 --> 00:00:28,580
But it turns out that under
但事实证明

16
00:00:28,820 --> 00:00:30,270
certain conditions, and I
在一定条件下

17
00:00:30,550 --> 00:00:31,580
will say in this video what those
我会在这个视频里讲到

18
00:00:31,770 --> 00:00:33,590
conditions are, getting a
这些条件是什么

19
00:00:33,820 --> 00:00:35,440
lot of data and training on
在这些条件下 得到大量的数据并在

20
00:00:35,730 --> 00:00:36,730
a certain type of learning
某种类型的学习算法中进行训练

21
00:00:37,010 --> 00:00:38,160
algorithm, can be a
可以是一种

22
00:00:38,240 --> 00:00:39,470
very effective way to get
有效的方法来获得

23
00:00:39,770 --> 00:00:41,320
a learning algorithm to do very good performance.
一个具有良好性能的学习算法

24
00:00:42,810 --> 00:00:44,280
And this arises often enough
而这种情况往往出现在

25
00:00:44,710 --> 00:00:45,930
that if those conditions hold true
这些条件对于你的问题

26
00:00:46,310 --> 00:00:47,850
for your problem and if
都成立 并且

27
00:00:47,970 --> 00:00:48,770
you're able to get a lot
你能够得到大量数据的

28
00:00:48,980 --> 00:00:50,070
of data, this could be
情况下 这可以是

29
00:00:50,210 --> 00:00:51,330
a very good way to get
一个很好的方式来获得

30
00:00:51,560 --> 00:00:52,970
a very high performance learning algorithm.
非常高性能的学习算法

31
00:00:53,990 --> 00:00:55,620
So in this video, let's
因此 在这段视频中

32
00:00:56,320 --> 00:00:58,960
talk more about that.
让我们一起讨论一下这个问题

33
00:00:59,110 --> 00:00:59,820
Let me start with a story.
我先讲一个故事

34
00:01:01,080 --> 00:01:02,620
Many, many years ago, two researchers
很多很多年前 我认识的两位研究人员

35
00:01:03,400 --> 00:01:05,380
that I know, Michelle Banko and
Michele Banko 和

36
00:01:05,520 --> 00:01:08,110
Eric Broule ran the following fascinating study.
Eric Brill 进行了一项有趣的研究

37
00:01:09,820 --> 00:01:11,290
They were interested in studying the
他们感兴趣的是研究

38
00:01:11,550 --> 00:01:12,910
effect of using different learning
使用不同的学习算法的效果

39
00:01:13,290 --> 00:01:15,210
algorithms versus trying them
与将这些效果

40
00:01:15,380 --> 00:01:17,420
out on different training set sciences,
使用到不同训练数据集上 两者的比较

41
00:01:18,020 --> 00:01:19,550
they were considering the problem
他们当时考虑这样一个问题

42
00:01:20,170 --> 00:01:22,120
of classifying between confusable words,
如何在易混淆的词之间进行分类

43
00:01:22,550 --> 00:01:23,610
so for example, in the sentence:
比如 在这样的句子中：

44
00:01:24,410 --> 00:01:26,990
for breakfast I ate, should it be to, two or too?
早餐我吃了__个鸡蛋 (to,two too 与 then,than 是两组混淆词)

45
00:01:27,940 --> 00:01:28,890
Well, for this example,
在这个例子中

46
00:01:29,450 --> 00:01:32,390
for breakfast I ate two, 2 eggs.
早餐我吃了2个鸡蛋

47
00:01:33,510 --> 00:01:34,530
So, this is one example
这是一个

48
00:01:35,320 --> 00:01:37,800
of a set of confusable words and that's a different set.
易混淆的单词的例子 而这是另外一组情况

49
00:01:38,240 --> 00:01:39,650
So they took machine learning
于是他们把诸如这样的机器学习问题

50
00:01:39,950 --> 00:01:41,580
problems like these, sort of supervised learning
当做一类监督学习问题

51
00:01:41,780 --> 00:01:43,190
problems to try to categorize
并尝试将其分类

52
00:01:43,970 --> 00:01:45,210
what is the appropriate word to
什么样的词

53
00:01:45,400 --> 00:01:46,560
go into a certain position
在一个英文句子特定的位置

54
00:01:47,540 --> 00:01:48,140
in an English sentence.
才是合适的

55
00:01:51,010 --> 00:01:52,110
They took a few different learning
他们用了几种不同的学习算法

56
00:01:52,340 --> 00:01:53,520
algorithms which were, you know,
这些算法都是

57
00:01:53,730 --> 00:01:55,210
sort of considered state of
在他们2001年进行研究的时候

58
00:01:55,310 --> 00:01:56,110
the art back in the day,
都已经

59
00:01:56,410 --> 00:01:57,670
when they ran the study in
被公认是比较领先的

60
00:01:57,730 --> 00:01:59,220
2001, so they took a
因此他们使用了一个方差

61
00:01:59,750 --> 00:02:01,140
variance, roughly a variance
用于逻辑回归上的一个方差

62
00:02:01,630 --> 00:02:03,180
on logistic regression called the Perceptron.
被称作“感知器” (perceptron)

63
00:02:03,760 --> 00:02:05,160
They also took some of
他们也采取了一些

64
00:02:05,250 --> 00:02:06,700
their algorithms that were fairly
比较公正的算法

65
00:02:07,090 --> 00:02:08,620
out back then but somewhat less
但是现在比较少用了

66
00:02:08,830 --> 00:02:10,600
used now so when the
因此当

67
00:02:10,750 --> 00:02:11,980
algorithm also very similar
这样一个类似于

68
00:02:12,380 --> 00:02:13,410
to which is a regression
回归问题

69
00:02:13,660 --> 00:02:15,580
but different in some ways, much
但在一些方法上又有所不同

70
00:02:16,140 --> 00:02:18,220
used somewhat less, used
过去用得比较多

71
00:02:18,480 --> 00:02:19,380
not too much right now
但现在用得不太多

72
00:02:20,180 --> 00:02:21,180
took what's called a memory based
一种基于内存的学习算法

73
00:02:21,430 --> 00:02:23,240
learning algorithm again used somewhat less now.
现在也用得比较少了

74
00:02:23,610 --> 00:02:25,940
But I'll talk a little bit about that later.
但是我稍后会讨论一点

75
00:02:26,230 --> 00:02:27,230
And they used a naive based
而且他们用了一个朴素算法

76
00:02:27,690 --> 00:02:29,240
algorithm, which is something they'll
这个我们将在

77
00:02:29,410 --> 00:02:32,380
actually talk about in this course.
这门课程中讨论到

78
00:02:32,690 --> 00:02:34,400
The exact algorithms of these details aren't important.
这些具体算法的细节不那么重要

79
00:02:35,040 --> 00:02:36,080
Think of this as, you know, just picking
想象一下

80
00:02:36,430 --> 00:02:40,380
four different classification algorithms and really the exact algorithms aren't important.
仅仅选取四种分类算法 且这些具体算法并不重要

81
00:02:41,980 --> 00:02:42,990
But what they did was they
他们所做的就是

82
00:02:43,140 --> 00:02:44,160
varied the training set size
改变了训练数据集的大小

83
00:02:44,500 --> 00:02:45,390
and tried out these learning
并尝将这些学习

84
00:02:45,450 --> 00:02:47,070
algorithms on the range of
算法用于不同大小的

85
00:02:47,210 --> 00:02:49,640
training set sizes and that's the result they got.
训练数据集中 这就是他们得到的结果

86
00:02:50,300 --> 00:02:51,310
And the trends are very
这些趋势非常明显

87
00:02:51,470 --> 00:02:53,170
clear right first most of
首先大部分

88
00:02:53,290 --> 00:02:55,470
these outer rooms give remarkably similar performance.
外部空间都具有相似的性能

89
00:02:56,200 --> 00:02:57,760
And second, as the training
其次 随着训练

90
00:02:58,150 --> 00:02:59,760
set size increases, on the
数据集的增大

91
00:02:59,860 --> 00:03:00,970
horizontal axis is the
在横轴上代表

92
00:03:01,280 --> 00:03:02,510
training set size in millions
数以百万计的训练集大小

93
00:03:04,070 --> 00:03:05,360
go from you know a
从成百上千到

94
00:03:05,420 --> 00:03:07,440
hundred thousand up to a
成千上万

95
00:03:07,720 --> 00:03:09,060
thousand million that is a
这是一个

96
00:03:09,330 --> 00:03:10,980
billion training examples. The
十亿大小训练集的例子

97
00:03:11,090 --> 00:03:11,860
performance of the algorithms
这些算法的性能

98
00:03:12,870 --> 00:03:15,360
all pretty much monotonically increase
也都对应地增强了

99
00:03:15,740 --> 00:03:16,610
and the fact that if
事实上 如果

100
00:03:16,650 --> 00:03:18,600
you pick any algorithm may be
你选择任意一个算法 可能是

101
00:03:19,000 --> 00:03:21,320
pick a "inferior algorithm" but
选择了一个"劣质的"算法

102
00:03:21,490 --> 00:03:22,650
if you give that "inferior
如果你给这个

103
00:03:23,190 --> 00:03:26,150
algorithm" more data, then from
劣质算法更多的数据 那么

104
00:03:26,390 --> 00:03:27,570
these examples, it looks like
从这些列子中看起来的话 它看上去

105
00:03:27,670 --> 00:03:30,330
it will most likely beat even a "superior algorithm".
很有可能会其他算法更好 甚至会比"优质算法"更好

106
00:03:32,200 --> 00:03:33,270
So since this original study
由于这项原始的研究

107
00:03:33,720 --> 00:03:35,850
which is very influential, there's been
非常具有影响力 因此已经有

108
00:03:36,360 --> 00:03:37,500
a range of many different
一系列许多不同的

109
00:03:37,830 --> 00:03:39,020
studies showing similar results
研究显示了类似的结果

110
00:03:39,550 --> 00:03:40,840
that show that many different learning
这些结果表明 许多不同的学习

111
00:03:41,150 --> 00:03:42,270
algorithms you know tend
算法有时倾向于

112
00:03:42,630 --> 00:03:44,290
to, can sometimes, depending on
依赖一些细节

113
00:03:44,460 --> 00:03:46,060
details, can give pretty similar ranges
并表现出相当相似

114
00:03:46,490 --> 00:03:48,320
of performance, but what can
的性能 但是真正能提高性能的

115
00:03:48,520 --> 00:03:51,570
really drive performance is you can give the algorithm a ton of training data.
是你能够给予一个算法大量的训练数据

116
00:03:53,190 --> 00:03:54,640
And this is, results like these
像这样的结果

117
00:03:55,010 --> 00:03:56,030
has led to a saying in
引起了一种

118
00:03:56,130 --> 00:03:57,360
machine learning that often in
在机器学习中

119
00:03:57,510 --> 00:03:58,920
machine learning it's not
的常用说法：

120
00:03:59,180 --> 00:04:00,460
who has the best algorithm that
并不是拥有最好算法的人能成功

121
00:04:00,600 --> 00:04:01,720
wins, it's who has the
而是拥有最多数据

122
00:04:02,810 --> 00:04:04,260
most data So when is this
的人能成功 那么

123
00:04:04,460 --> 00:04:06,240
true and when is this not true?
这种情况什么时候是真 什么时候是假呢？

124
00:04:06,560 --> 00:04:07,710
Because we have a learning
因为我们有一个学习算法

125
00:04:07,850 --> 00:04:09,000
algorithm for which this is
这种算法在这种情况下是真的

126
00:04:09,150 --> 00:04:10,590
true then getting a
那么得到大量

127
00:04:10,820 --> 00:04:11,970
lot of data is often
的数据通常是

128
00:04:12,620 --> 00:04:13,830
maybe the best way to ensure
保证我们

129
00:04:14,180 --> 00:04:15,700
that we have an algorithm with
具有一个高性能算法

130
00:04:15,900 --> 00:04:17,360
very high performance rather than
的最佳方式 而不是

131
00:04:17,520 --> 00:04:20,080
you know, debating worrying about exactly which of these items to use.
去争辩使用什么样的算法

132
00:04:21,710 --> 00:04:23,200
Let's try to lay out a
假如有这样一些假设

133
00:04:23,330 --> 00:04:25,130
set of assumptions under which having
在这些假设下有

134
00:04:25,660 --> 00:04:28,230
a massive training set we think will be able to help.
大量我们认为有用的训练集

135
00:04:29,780 --> 00:04:31,310
Let's assume that in our
我们假设在我们的

136
00:04:31,410 --> 00:04:33,210
machine learning problem, the features
机器学习问题中 特征值

137
00:04:34,080 --> 00:04:36,560
x have sufficient information with which
x包含了足够的信息

138
00:04:36,830 --> 00:04:38,600
we can use to predict y accurately.
这些信息可以帮助我们用来准确地预测 y

139
00:04:40,380 --> 00:04:41,490
For example, if we take
例如 如果我们采用了

140
00:04:41,790 --> 00:04:44,860
the confusable words all of them that we had on the previous slide.
我们前一张幻灯片里的所有容易混淆的词

141
00:04:45,740 --> 00:04:47,040
Let's say that it features x
假如说它能够描述 x

142
00:04:47,520 --> 00:04:48,360
capture what are the surrounding
捕捉到需要填写

143
00:04:49,090 --> 00:04:51,620
words around the blank that we're trying to fill in.
的周围空白的词语

144
00:04:51,840 --> 00:04:53,630
So the features capture then we
那么特征捕捉到之后

145
00:04:54,220 --> 00:04:56,440
want to have, sometimes for breakfast I have black eggs.
我们就希望有 有些时候是“早饭我吃了__鸡蛋”

146
00:04:57,350 --> 00:04:58,220
Then yeah that is pretty
那么这就有

147
00:04:58,480 --> 00:04:59,970
much information to tell me
大量的信息来告诉我

148
00:05:00,170 --> 00:05:01,050
that the word I want
中间我需要填的

149
00:05:01,420 --> 00:05:03,640
in the middle is TWO and that
词是“两个” (two)

150
00:05:03,850 --> 00:05:06,640
is not word TO and its not the word TOO. So
而不是单词 to 或 too

151
00:05:09,650 --> 00:05:11,270
the features capture, you know, one
因此特征捕捉

152
00:05:11,620 --> 00:05:13,390
of these surrounding words then that
哪怕是周围词语中的一个词

153
00:05:13,560 --> 00:05:15,360
gives me enough information to pretty
就能够给我足够的信息来

154
00:05:15,790 --> 00:05:17,640
unambiguously decide what is
明确

155
00:05:17,780 --> 00:05:18,830
the label y or in
标签 y 是什么

156
00:05:19,300 --> 00:05:20,190
other words what is the word
换句话说

157
00:05:20,750 --> 00:05:21,760
that I should be using to fill
从这三组易混淆的词中

158
00:05:22,100 --> 00:05:23,520
in that blank out of
我应该选什么

159
00:05:23,930 --> 00:05:25,610
this set of three confusable words.
词来填空

160
00:05:27,110 --> 00:05:28,320
So that's an example what
这就是一个例子

161
00:05:28,460 --> 00:05:29,840
the future ex has sufficient information
特征值 x 有充足的信息

162
00:05:30,410 --> 00:05:32,270
for specific y. For
来确定 y

163
00:05:32,470 --> 00:05:33,240
a counter example.
举一个反例

164
00:05:34,690 --> 00:05:36,010
Consider a problem of predicting
设想一个

165
00:05:36,470 --> 00:05:38,090
the price of a house from
房子价格的问题

166
00:05:38,340 --> 00:05:39,330
only the size of the
房子只有大小信息

167
00:05:39,390 --> 00:05:40,350
house and from no other
没有其他特征

168
00:05:42,060 --> 00:05:42,060
features. So
那么

169
00:05:42,820 --> 00:05:43,890
if you imagine I tell you
如果我告诉你

170
00:05:44,150 --> 00:05:45,270
that a house is, you
这个房子有

171
00:05:45,370 --> 00:05:48,100
know, 500 square feet but I don't give you any other features.
500平方英尺 但是我没有告诉你其他的特征信息

172
00:05:48,530 --> 00:05:49,520
I don't tell you that the
我也不告诉你这个

173
00:05:49,590 --> 00:05:51,990
house is in an expensive part of the city.
房子位于这个城市房价比较昂贵的区域

174
00:05:52,590 --> 00:05:53,710
Or if I don't tell you that
如果我也不告诉你

175
00:05:53,840 --> 00:05:55,290
the house, the number of
这所房子的

176
00:05:55,500 --> 00:05:57,030
rooms in the house, or how
房间数量 或者

177
00:05:57,180 --> 00:05:58,400
nicely furnished the house
它里面陈设了多漂亮的家具

178
00:05:58,790 --> 00:06:00,540
is, or whether the house is new or old.
或这个房子是新的还是旧的

179
00:06:01,090 --> 00:06:02,290
If I don't tell you anything other
我不告诉你其他任何信息

180
00:06:02,540 --> 00:06:03,360
than that this is a
除了这个房子

181
00:06:03,520 --> 00:06:05,440
500 square foot house, well there's
有500平方英尺以外

182
00:06:05,720 --> 00:06:07,160
so many other factors that would
然而除此之外还有许多其他因素

183
00:06:07,340 --> 00:06:08,280
affect the price of a
会影响房子

184
00:06:08,470 --> 00:06:09,940
house other than just the size
的价格 不仅仅是房子的大小

185
00:06:10,320 --> 00:06:11,330
of a house that if all
如果所有

186
00:06:11,440 --> 00:06:12,910
you know is the size, it's actually
你所知道的只有房子的尺寸 那么事实上

187
00:06:13,050 --> 00:06:14,610
very difficult to predict the price accurately.
是很难准确预测它的价格的

188
00:06:16,220 --> 00:06:16,860
So that would be a counter
这是这对于这个假设

189
00:06:17,280 --> 00:06:18,230
example to this assumption
的一个反例

190
00:06:18,880 --> 00:06:20,300
that the features have sufficient information
假设是特征能够提供足够的信息

191
00:06:20,800 --> 00:06:23,260
to predict the price to the desired level of accuracy.
来在需要的水平上预测出价格

192
00:06:24,090 --> 00:06:25,180
The way I think about testing
我想检测这样一个

193
00:06:25,540 --> 00:06:26,730
this assumption, one way I
假设的方式是

194
00:06:26,940 --> 00:06:29,160
often think about it is, how often I ask myself.
去思考它 "多久一次？" 我这样问自己

195
00:06:30,260 --> 00:06:31,660
Given the input features x,
给定一个输入特征向量 x

196
00:06:32,180 --> 00:06:33,320
given the features, given the
给定这些特征值

197
00:06:33,380 --> 00:06:35,440
same information available as well as learning algorithm.
也给定了相同的可用的信息和学习算法

198
00:06:36,510 --> 00:06:38,690
If we were to go to human expert in this domain.
如果我们去人类专家这个领域

199
00:06:39,680 --> 00:06:41,570
Can a human experts actually or
一个人类学家能够

200
00:06:41,720 --> 00:06:43,160
can human expert confidently predict
准确或自信的预测出

201
00:06:43,490 --> 00:06:45,390
the value of y. For this
y值吗？

202
00:06:45,630 --> 00:06:46,730
first example if we go
第一个例子 如果我们去

203
00:06:46,980 --> 00:06:49,420
to, you know an expert human English speaker.
找你认识的一个人类专家 说英语的

204
00:06:49,810 --> 00:06:51,260
You go to someone that
你找到了一个

205
00:06:51,390 --> 00:06:53,740
speaks English well, right, then
英语说得很好的人 好 那么

206
00:06:53,940 --> 00:06:55,230
a human expert in English
一个说英语的人类学家

207
00:06:55,940 --> 00:06:57,260
just read most people like
刚好理解大部分像

208
00:06:57,450 --> 00:06:59,730
you and me will probably we
你和我这样的人 可能会

209
00:07:00,160 --> 00:07:01,080
would probably be able to
我们就可能能够

210
00:07:01,170 --> 00:07:02,370
predict what word should go in
预测出在这种情况下

211
00:07:02,620 --> 00:07:03,960
here, to a good English
该使用什么样的语言 对于一个英语说得

212
00:07:04,290 --> 00:07:05,550
speaker can predict this well,
好的人来说 可以预测得很好

213
00:07:05,850 --> 00:07:06,710
and so this gives me confidence
因此这就给了我信心

214
00:07:07,470 --> 00:07:08,640
that x allows us to predict
x能够让我们准确

215
00:07:08,810 --> 00:07:10,550
y accurately, but in contrast
地预测y 但是与此相反

216
00:07:11,240 --> 00:07:13,550
if we go to an expert in human prices.
如果我们去找一个价格上的专家

217
00:07:14,040 --> 00:07:16,390
Like maybe an expert realtor, right, someone
如 可能是一个房地产经纪人专家

218
00:07:16,950 --> 00:07:18,090
who sells houses for a living.
以买房子为生的人

219
00:07:18,610 --> 00:07:19,450
If I just tell them the
如果我只是告诉他们

220
00:07:19,550 --> 00:07:20,440
size of a house and I
一个房子的大小

221
00:07:20,530 --> 00:07:21,860
tell them what the price
并告诉他们房子的价格

222
00:07:22,240 --> 00:07:23,410
is well even an expert
那么即使是房价评估或售房

223
00:07:23,600 --> 00:07:25,210
in pricing or selling
方面的专家

224
00:07:25,600 --> 00:07:26,520
houses wouldn't be able
他也不能

225
00:07:26,550 --> 00:07:28,280
to tell me and so this is fine that
告诉我（房子的预测价格）

226
00:07:29,000 --> 00:07:31,060
for the housing price example knowing
所以在房子价格的例子中

227
00:07:31,600 --> 00:07:33,300
only the size doesn't give
只知道房子的大小并不能

228
00:07:33,460 --> 00:07:34,960
me enough information to predict
给我足够的信息来预测

229
00:07:35,920 --> 00:07:36,870
the price of the house.
房子的价格

230
00:07:37,690 --> 00:07:39,890
So, let's say, this assumption holds.
如果这个假设是成立的

231
00:07:41,200 --> 00:07:42,650
Let's see then, when having
那么让我们来看一看 当有

232
00:07:43,040 --> 00:07:44,230
a lot of data could help.
大量的数据时是有帮助的

233
00:07:45,020 --> 00:07:46,370
Suppose the features have enough
假设特征值有

234
00:07:46,650 --> 00:07:47,870
information to predict the
足够的信息来预测

235
00:07:48,050 --> 00:07:49,380
value of y.
y值

236
00:07:49,540 --> 00:07:50,750
And let's suppose we use a
假设我们使用一种

237
00:07:50,960 --> 00:07:52,380
learning algorithm with a
需要大量参数的

238
00:07:52,600 --> 00:07:54,430
large number of parameters so
学习算法

239
00:07:54,580 --> 00:07:56,020
maybe logistic regression or linear
也许是有很多特征值的

240
00:07:56,280 --> 00:07:58,090
regression with a large number of features.
逻辑回归或线性回归

241
00:07:58,550 --> 00:07:59,490
Or one thing that I sometimes
或者我有时做的一件事

242
00:07:59,950 --> 00:08:00,740
do, one thing that I often
我经常做的一件事

243
00:08:00,960 --> 00:08:03,300
do actually is using neural network with many hidden units.
实际上是在利用许多隐藏单元的神经网络

244
00:08:03,860 --> 00:08:05,230
That would be another learning
那又将使另外一个

245
00:08:05,500 --> 00:08:07,420
algorithm with a lot of parameters.
带有很多参数的学习算法了

246
00:08:08,470 --> 00:08:10,280
So these are all powerful learning
这些都是强大的学习

247
00:08:10,350 --> 00:08:12,350
algorithms with a lot of parameters that
算法 它们有很多参数

248
00:08:13,040 --> 00:08:14,810
can fit very complex functions.
这些参数可以拟合非常复杂的函数

249
00:08:16,750 --> 00:08:17,550
So, I'm going to call these, I'm
因此我要调用这些

250
00:08:18,630 --> 00:08:19,720
going to think of these as
我将把这些算法想象成

251
00:08:20,510 --> 00:08:21,970
low-bias algorithms because you
低偏差算法 因为

252
00:08:22,140 --> 00:08:23,540
know we can fit very complex functions
我们能够拟合非常复杂的函数

253
00:08:25,480 --> 00:08:26,740
and because we have
而且因为我们有

254
00:08:27,260 --> 00:08:28,920
a very powerful learning algorithm,
非常强大的学习算法

255
00:08:29,380 --> 00:08:30,590
they can fit very complex functions.
这些学习算法能够拟合非常复杂的函数

256
00:08:31,680 --> 00:08:33,470
Chances are, if we
很有可能 如果我们

257
00:08:34,070 --> 00:08:35,790
run these algorithms on
用这些数据运行

258
00:08:35,940 --> 00:08:37,250
the data sets, it will
这些算法 这种算法

259
00:08:37,430 --> 00:08:38,770
be able to fit the training
很好地拟合训练集

260
00:08:39,200 --> 00:08:40,680
set well, and so
因此

261
00:08:40,940 --> 00:08:43,230
hopefully the training error will be slow.
训练误差就会很低

262
00:08:44,520 --> 00:08:45,520
Now let's say, we use
现在假设我们使用了

263
00:08:46,020 --> 00:08:47,790
a massive, massive training set,
非常非常大的训练集

264
00:08:48,190 --> 00:08:49,370
in that case, if we
在这种情况下 如果我们

265
00:08:49,430 --> 00:08:51,460
have a huge training set, then
有一个庞大的训练集 那么

266
00:08:51,630 --> 00:08:53,490
hopefully even though we have a lot of parameters
尽管我们希望有很多参数

267
00:08:53,760 --> 00:08:56,080
but if the training set is sort of even much
但是如果训练集比

268
00:08:56,360 --> 00:08:57,450
larger than the number of
比参数的数量大一些

269
00:09:02,590 --> 00:09:03,660
Right because we have such a
因为我们有如此

270
00:09:03,710 --> 00:09:05,680
massive training set and by
庞大的训练集

271
00:09:06,070 --> 00:09:07,870
unlikely to overfit what that
并且不太可能过度拟合

272
00:09:08,070 --> 00:09:09,090
means is that the training
也就是说训练

273
00:09:09,390 --> 00:09:10,860
error will hopefully be
误差有希望

274
00:09:11,050 --> 00:09:13,270
close to the test error.
接近测试误差

275
00:09:13,960 --> 00:09:15,160
Finally putting these two
最后把这两个

276
00:09:15,350 --> 00:09:16,770
together that the train
放在一起 训练集

277
00:09:16,990 --> 00:09:18,590
set error is small and
误差很小 而

278
00:09:18,700 --> 00:09:19,870
the test set error is close
测试集误差又接近

279
00:09:20,360 --> 00:09:22,290
to the training error what
训练误差

280
00:09:22,460 --> 00:09:24,510
this two together imply is
这两个就意味着

281
00:09:24,710 --> 00:09:26,630
that hopefully the test set error
测试集的误差

282
00:09:27,780 --> 00:09:28,450
will also be small.
也会很小

283
00:09:30,000 --> 00:09:32,610
Another way to
另一种考虑

284
00:09:32,720 --> 00:09:33,930
think about this is that
这个问题的方式是

285
00:09:34,700 --> 00:09:35,740
in order to have a high
为了有一个高

286
00:09:35,880 --> 00:09:37,630
performance learning algorithm we want
性能的学习算法 我们希望

287
00:09:37,930 --> 00:09:40,470
it not to have high bias and not to have high variance.
它不要有高的偏差和方差

288
00:09:42,060 --> 00:09:43,270
So the bias problem we're going
因此偏差问题 我么将

289
00:09:43,350 --> 00:09:44,700
to address by making sure we
通过确保

290
00:09:44,880 --> 00:09:45,910
have a learning algorithm with many
有一个具有很多

291
00:09:46,170 --> 00:09:47,670
parameters and so that
参数的学习算法来保证 以便

292
00:09:47,840 --> 00:09:48,930
gives us a low bias alorithm
我们能够得到一个较低偏差的算法

293
00:09:50,110 --> 00:09:51,460
and by using a
并且通过用

294
00:09:51,610 --> 00:09:53,240
very large training set, this ensures
非常大的训练集来保证

295
00:09:53,760 --> 00:09:55,590
that we don't have a variance problem here.
我们在此没有方差问题

296
00:09:55,840 --> 00:09:57,280
So hopefully our algorithm will
我们的算法将

297
00:09:57,430 --> 00:09:59,100
have no variance and so
没有方差 并且

298
00:09:59,340 --> 00:10:00,940
is by pulling these two together,
通过将这两个值放在一起

299
00:10:01,870 --> 00:10:02,830
that we end up with a low
我们最终可以得到一个低

300
00:10:02,900 --> 00:10:03,990
bias and a low variance
误差和低方差

301
00:10:04,990 --> 00:10:06,920
learning algorithm and this
的学习算法 这

302
00:10:07,140 --> 00:10:08,300
allows us to do well
使得我们能够

303
00:10:08,710 --> 00:10:10,150
on the test set.
很好地测试测试数据集

304
00:10:10,430 --> 00:10:12,140
And fundamentally it's a key ingredients
从根本上来说 这是一个关键

305
00:10:13,020 --> 00:10:14,560
of assuming that the features
的假设：特征值

306
00:10:14,940 --> 00:10:16,750
have enough information and we
有足够的信息量 且我们

307
00:10:16,900 --> 00:10:17,960
have a rich class of functions
有一类很好的函数

308
00:10:18,400 --> 00:10:19,580
that's why it guarantees low bias,
这是为什么能保证低误差的关键所在

309
00:10:20,760 --> 00:10:21,750
and then it having a massive
它有大量的

310
00:10:22,110 --> 00:10:25,010
training set that that's what guarantees more variance.
训练数据集 这能保证得到更多的方差值

311
00:10:27,150 --> 00:10:28,310
So this gives us a
因此这给我们提出了

312
00:10:28,410 --> 00:10:29,820
set of conditions rather hopefully
一些可能的条件

313
00:10:30,090 --> 00:10:31,610
some understanding of what's the
一些对于

314
00:10:31,870 --> 00:10:33,730
sort of problem where if
问题的认识 如果

315
00:10:33,860 --> 00:10:34,790
you have a lot of data
你有大量的数据

316
00:10:34,960 --> 00:10:36,150
and you train a learning
而且你训练了一种

317
00:10:36,380 --> 00:10:38,930
algorithm with lot of parameters, that might
带有很多参数的学习算法 那么这将

318
00:10:39,120 --> 00:10:39,870
be a good way to give
会是一个很好的方式来提供

319
00:10:40,060 --> 00:10:42,490
a high performance learning algorithm
一个高性能的学习算法

320
00:10:43,480 --> 00:10:44,140
and really, I think the key test that
我觉得关键的测试

321
00:10:44,230 --> 00:10:45,520
I often ask myself are
我常常问自己 是

322
00:10:45,820 --> 00:10:47,100
first, can a human experts
首先 一个人类专家

323
00:10:47,200 --> 00:10:48,360
look at the features x and
看到了特征值x 且

324
00:10:48,880 --> 00:10:49,890
confidently predict the value of
能很有信心的预测出

325
00:10:50,030 --> 00:10:51,080
y. Because that's sort of
y值吗？ 因为这可以

326
00:10:51,210 --> 00:10:53,050
a certification that y
证明y

327
00:10:53,320 --> 00:10:55,040
can be predicted accurately from
可以根据特征值

328
00:10:55,140 --> 00:10:57,010
the features x and second,
x被准确地预测出来 其次

329
00:10:57,510 --> 00:10:58,630
can we actually get a large
我们实际上能得到一组

330
00:10:58,820 --> 00:11:00,150
training set, and train the
庞大的训练集并且在这个

331
00:11:00,350 --> 00:11:01,470
learning algorithm with a lot of
训练集中训练一个有

332
00:11:01,540 --> 00:11:03,290
parameters in the training
很多参数的学习算法吗？

333
00:11:03,520 --> 00:11:04,420
set and if you can't do both
如果你不能做到这两者

334
00:11:04,870 --> 00:11:06,300
then that's more often give
那么这更多时候

335
00:11:06,460 --> 00:11:08,570
you a very kind performance learning algorithm.
你会得到一个性能很好的学习算法

